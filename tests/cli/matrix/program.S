.globl _start

.text
_start:
        # 初始化向量寄存器
        li x11, 32                # 向量长度（最大为32字节）
        li x4, 4                  # 数据单元大小（4字节/整数）
        vsetvl x5, x11, x4        # 设置向量长度

        # 矩阵维度
        # li x6, 46                 # 中间维度
        # li x7, 20                 # 矩阵1行数
        # li x8, 50                 # 矩阵2列数
        li x6, 4
        li x7, 2
        li x8, 3

        # 打印矩阵维度
        mv a0, x7                 # 矩阵1行数
        li a7, 244                  # syscall 编号：1 (print integer)
        ecall                    # 调用系统打印值

        li a0, 32                 # ASCII 32 = 空格
        li a7, 245                 # syscall 编号：11 (print char)
        ecall

        mv a0, x8                 # 矩阵2列数
        li a7, 244                  # syscall 编号：1 (print integer)
        ecall                    # 调用系统打印值

        li a0, 10                 # ASCII 10 = 换行
        li a7, 245                 # syscall 编号：11 (print char)
        ecall

        # 矩阵地址
        la x9, matrix1            # 矩阵1基址
        la x10, matrix2           # 矩阵2基址
        la x12, result            # 结果矩阵基址
        la x18, temp              # 暂存矩阵基址

        # 初始化结果矩阵为0
        li x13, 0
        li x14, 0                 # 行偏移
zero_loop:
        li x15, 0                 # 列偏移
col_zero_loop:
        sw x13, 0(x12)            # 写入0到结果矩阵
        addi x12, x12, 4          # 移动到下一个元素
        addi x15, x15, 1
        blt x15, x8, col_zero_loop # 处理每列
        addi x14, x14, 1
        blt x14, x7, zero_loop     # 处理每行

la x12, result            # 结果矩阵基址

# ----------------------- 矩阵乘法 -----------------------
# （矩阵B已经转置）
# 只使用vmul.vv 与 vadd.vv 实现矩阵乘法。都是逐元素的操作，使用vector reg作为rd。
# 使用vsetvl设置向量长度
# 大致思路：
# 1. 初始化行索引 i = 0
# 2. 计算矩阵A当前行的起始地址，并读取A的第j行。（使用vlw.v）
# 3. 初始化列索引 j = 0
# 4. 计算矩阵B转置后当前行（原矩阵B的列）的起始地址，并读取B的第j行。（使用vlw.v）
# 5. 使用vmul.vv 计算A的第i行与B的第j列的乘积，暂存起来，作为暂存矩阵的第i行。
# 6. 重复4-5，直到B的第j行处理完毕。
# 7. 使用vadd.vv 将暂存矩阵的所有行相加，得到结果矩阵的第i行。
# 8. 重复2-7，直到A的每一行处理完毕。

# 初始化 x14
li x14, 0

row_loop:
    vsetvl x22, x6, x4
    blt x14, x7, proceed_row   # i = 0;i < A的行数; i++。循环变量是x14
    j end_matrix_mult

proceed_row:
    # 计算矩阵A当前行的起始地址
    slli t4, x6, 2          # t4 = i * 4
    mul t4, x14, t4          # t4 = i * A的列数  (t4 = x5)
    add x9, x9, t4        # x9 = a_base + t4，指向 A[i][0]
    # 读取A矩阵的行向量
    vlw.v v1, 0(x9)
    li x15, 0                 # 初始化列索引 j = 0

    mv x13, x18

    la x10, matrix2           # 重置B矩阵的指针到起始位置
col_loop:
    blt x15, x8, proceed_col  # 如果 j < B的列数，开始计算列。循环变量是x15
    vsetvl x23, x8, x4
    vlw.v v4, 0(x18)            # 加载暂存矩阵中的第一行
    li x16, 0                 # 初始化内积索引 k = 0
    j inner_loop

proceed_col:
    vlw.v v2, 0(x10)           # 读取B矩阵的列向量
    vmul.vv v3, v1, v2         # 计算逐元素乘积

    # 将结果存储到暂存矩阵
    la x17, vector_temp        # 加载临时向量空间地址
    vsw.v v3, 0(x17)          # 将乘积结果存储到临时空间

    # 重置计数器和指针
    li x16, 0                  # 初始化计数器
    mv x13, x18               # 重置暂存矩阵指针到起始位置
    slli t5, x15, 2           # 计算列偏移（每个元素4字节）
    add x13, x13, t5         # 调整到正确的列位置
    mul t5, x8, x4            # 计算行间距（列数 * 4字节）

save_col:
    lw t4, 0(x17)             # 从临时空间加载一个元素
    sw t4, 0(x13)             # 存储到暂存矩阵的对应位置
    add x13, x13, t5          # 移动到下一行的相同列位置
    addi x17, x17, 4          # 移动到临时空间的下一个元素
    addi x16, x16, 1          # 增加计数器
    blt x16, x6, save_col     # 如果未处理完所有元素，继续循环


    # 更新B矩阵的指针到下一列
    mul t4, x6, x4            # 计算B矩阵一列的字节数
    add x10, x10, t4          # 移动到B矩阵的下一列

    # 更新列索引
    addi x15, x15, 1          # 增加列索引

    j col_loop                # 继续处理下一列

inner_loop:  # 使用vadd.vv 将暂存矩阵的所有行相加，得到结果矩阵的第i行

    blt x16, x8, compute_inner  # 内积索引 k = 0;k < A的列数; k++。循环变量是x16
    # 计算完一轮暂存矩阵之后，回到row_loop计算下一行
    # 保存结果矩阵的第i行
    slli t4, x8, 2            # t4 = i * 4
    mul t4, x14, t4            # t4 = i * B的列数
    add t3, x12, t4            # t3 = c_base + t4
    vsw.v v4, 0(t3)
    addi x14, x14, 1
    j row_loop

compute_inner:
    # 计算暂存矩阵的下一行的地址
    mul t4, x8, x4
    add x18, x18, t4
    vlw.v v5, 0(x18)

    # 向量累加
    vadd.vv v4, v4, v5

    # 更新指针和索引
    addi x16, x16, 1
    j inner_loop

end_matrix_mult:

# ----------------------- 矩阵乘法 -----------------------

        # 打印结果矩阵
        li x14, 0                 # 行索引
print_loop_row:
        li x15, 0                 # 列索引
print_loop_col:
        mul x16, x14, x8          # 行偏移 = 当前行 * 列数
        add x16, x16, x15         # 列偏移 = 行偏移 + 当前列
        slli x16, x16, 2          # 偏移量 = 偏移 * 4（字节）
        add x16, x16, x12         # 计算结果地址

        lw a0, 0(x16)             # 加载结果矩阵的值到 a0
        li a7, 244                  # syscall 编号：1 (print integer)
        ecall                    # 调用系统打印值

        # 打印空格
        li a0, 32                 # ASCII 32 = 空格
        li a7, 245                 # syscall 编号：11 (print char)
        ecall

        addi x15, x15, 1          # 更新列索引
        blt x15, x8, print_loop_col

        # 打印换行
        li a0, 10                 # ASCII 10 = 换行
        li a7, 245                 # syscall 编号：11 (print char)
        ecall

        addi x14, x14, 1          # 更新行索引
        blt x14, x7, print_loop_row

        # 程序结束
        li a7, 246                 # syscall 编号：10 (exit)
        ecall

.data
matrix1:
        # .word 3, 2, 6, 8, 5, 9, 3, 1, 8, 0, 4, 7, 4, 6, 7, 2, 7, 4, 9, 1, 4, 2, 7, 4, 9, 3, 7, 4, 7, 2, 2, 9, 0, 6, 6, 1, 1, 3, 1, 3, 6, 9, 2, 9, 3, 0
        # .word 8, 4, 8, 7, 0, 4, 4, 9, 4, 4, 4, 2, 9, 9, 6, 0, 5, 7, 7, 6, 5, 5, 7, 3, 9, 4, 6, 8, 7, 7, 2, 2, 2, 2, 4, 1, 6, 5, 3, 8, 4, 7, 2, 6, 4, 2
        # .word 7, 2, 8, 2, 1, 4, 4, 1, 8, 6, 8, 2, 9, 6, 4, 8, 4, 0, 3, 2, 8, 2, 1, 0, 0, 2, 6, 5, 2, 2, 5, 3, 2, 8, 7, 0, 6, 1, 3, 2, 5, 0, 2, 0, 2, 3
        # .word 5, 5, 5, 2, 8, 0, 9, 0, 0, 1, 1, 1, 9, 3, 2, 1, 0, 6, 5, 9, 7, 3, 9, 8, 1, 9, 2, 9, 5, 4, 4, 1, 1, 0, 1, 8, 9, 0, 1, 1, 6, 4, 4, 9, 6, 7
        # .word 8, 5, 1, 4, 4, 2, 1, 1, 4, 4, 1, 5, 6, 1, 6, 5, 6, 8, 4, 7, 1, 1, 5, 2, 1, 5, 9, 2, 3, 1, 2, 9, 0, 6, 4, 9, 8, 2, 3, 0, 4, 7, 7, 1, 4, 1
        # .word 8, 0, 7, 0, 9, 7, 5, 5, 4, 6, 7, 5, 7, 0, 4, 2, 8, 5, 4, 4, 8, 9, 8, 2, 5, 5, 7, 1, 1, 7, 9, 9, 2, 4, 9, 0, 8, 1, 5, 7, 6, 0, 0, 8, 5, 8
        # .word 2, 6, 2, 5, 2, 8, 3, 9, 0, 9, 2, 2, 9, 5, 9, 0, 4, 6, 2, 9, 8, 3, 4, 0, 9, 5, 9, 4, 4, 1, 6, 6, 5, 0, 7, 7, 5, 4, 8, 9, 5, 5, 8, 3, 3, 4
        # .word 0, 2, 6, 6, 2, 8, 4, 1, 1, 6, 1, 9, 1, 8, 1, 2, 2, 9, 7, 4, 3, 0, 6, 4, 6, 4, 5, 4, 6, 9, 7, 0, 8, 7, 6, 5, 9, 8, 9, 2, 7, 6, 4, 0, 6, 2
        # .word 6, 3, 7, 6, 3, 0, 4, 2, 6, 5, 2, 6, 9, 9, 0, 5, 6, 4, 1, 0, 5, 4, 0, 4, 6, 3, 4, 1, 1, 2, 7, 9, 8, 1, 3, 7, 1, 2, 2, 9, 6, 8, 7, 3, 1, 0
        # .word 8, 5, 6, 3, 5, 9, 8, 2, 6, 0, 3, 8, 9, 1, 7, 6, 6, 4, 2, 7, 2, 5, 2, 5, 5, 6, 1, 0, 7, 9, 4, 1, 7, 7, 1, 2, 4, 2, 5, 8, 5, 0, 5, 3, 0, 4
        # .word 0, 1, 5, 4, 9, 3, 5, 3, 2, 2, 6, 5, 4, 4, 0, 4, 7, 2, 9, 2, 2, 0, 9, 0, 5, 6, 7, 7, 3, 2, 7, 5, 6, 5, 0, 0, 1, 5, 3, 7, 9, 2, 4, 3, 5, 1
        # .word 4, 4, 2, 8, 1, 2, 5, 2, 6, 3, 6, 2, 6, 8, 6, 3, 6, 7, 0, 8, 9, 9, 6, 3, 0, 0, 9, 6, 8, 2, 5, 9, 7, 7, 3, 7, 2, 8, 5, 6, 3, 0, 1, 5, 3, 0
        # .word 1, 4, 1, 7, 8, 3, 8, 5, 0, 6, 6, 4, 4, 4, 6, 2, 0, 8, 5, 2, 6, 2, 0, 3, 0, 7, 6, 6, 5, 3, 2, 3, 4, 6, 3, 0, 8, 4, 3, 0, 3, 6, 9, 0, 2, 7
        # .word 0, 1, 6, 4, 8, 3, 2, 2, 2, 0, 5, 6, 7, 5, 7, 7, 4, 5, 0, 8, 3, 1, 6, 4, 4, 1, 7, 0, 2, 1, 8, 4, 8, 1, 0, 5, 9, 1, 8, 3, 9, 0, 9, 6, 1, 1
        # .word 5, 3, 1, 7, 2, 9, 3, 5, 0, 0, 9, 3, 0, 1, 2, 9, 8, 9, 8, 2, 6, 7, 4, 2, 7, 3, 2, 1, 9, 4, 7, 9, 1, 2, 3, 7, 8, 1, 6, 0, 0, 2, 0, 7, 3, 9
        # .word 3, 2, 3, 2, 3, 0, 4, 0, 7, 6, 9, 5, 1, 3, 8, 1, 6, 0, 5, 8, 7, 6, 3, 9, 3, 8, 7, 0, 8, 5, 2, 6, 2, 8, 3, 0, 0, 9, 1, 4, 4, 6, 8, 9, 8, 1
        # .word 3, 3, 3, 5, 1, 0, 1, 1, 2, 0, 0, 8, 8, 1, 6, 5, 8, 9, 4, 7, 9, 5, 9, 0, 7, 4, 8, 0, 7, 4, 0, 3, 2, 9, 2, 9, 9, 8, 0, 5, 7, 6, 9, 6, 8, 6
        # .word 8, 5, 8, 7, 7, 3, 6, 0, 6, 8, 8, 0, 6, 3, 6, 8, 1, 3, 5, 5, 6, 9, 5, 7, 5, 5, 9, 2, 9, 5, 1, 2, 5, 4, 3, 9, 6, 5, 5, 1, 5, 3, 1, 8, 0, 8
        # .word 9, 6, 5, 6, 2, 3, 3, 6, 6, 8, 3, 0, 0, 6, 3, 4, 2, 4, 5, 6, 3, 9, 8, 9, 9, 3, 8, 8, 5, 8, 0, 4, 7, 0, 1, 2, 4, 2, 5, 6, 8, 1, 7, 7, 3, 2
        # .word 6, 6, 1, 4, 2, 1, 6, 2, 5, 6, 2, 9, 5, 2, 8, 9, 8, 4, 5, 7, 8, 6, 6, 7, 2, 9, 7, 7, 3, 0, 1, 0, 1, 2, 0, 2, 1, 5, 1, 3, 0, 0, 2, 7, 2, 3
        # .word 5, 3, 1, 7, 2, 9, 3, 5, 0, 0, 9, 3, 0, 1, 2, 9, 8, 9, 8, 2, 6, 7, 4, 2, 7, 3, 2, 1, 9, 4, 7, 9, 1, 2, 3, 7, 8, 1, 6, 0, 0, 2, 0, 7, 3, 9

        # 测试小矩阵
        .word 1, 2, 3, 7
        .word 4, 5, 6, 2
matrix2:
        # .word 6, 1, 4, 1, 7, 1, 2, 0, 8, 4, 3, 5, 5, 5, 1, 0, 9, 5, 5, 7, 5, 9, 8, 8, 8, 4, 1, 7, 8, 9, 6, 6, 0, 0, 1, 3, 1, 1, 6, 4, 9, 8, 6, 0, 3, 8
        # .word 4, 9, 2, 2, 5, 0, 8, 5, 8, 6, 5, 4, 6, 2, 3, 9, 6, 2, 0, 2, 7, 9, 2, 3, 1, 4, 6, 3, 9, 4, 8, 1, 9, 3, 0, 6, 6, 2, 9, 0, 2, 0, 1, 0, 6, 4
        # .word 4, 3, 1, 2, 7, 9, 8, 2, 7, 2, 1, 5, 3, 4, 7, 6, 1, 6, 5, 7, 4, 7, 3, 3, 1, 2, 0, 3, 3, 6, 1, 1, 6, 8, 4, 1, 8, 6, 4, 7, 1, 2, 7, 7, 4, 7
        # .word 4, 4, 5, 4, 4, 2, 7, 0, 2, 5, 5, 1, 7, 6, 9, 8, 7, 8, 9, 6, 6, 3, 2, 5, 3, 6, 8, 4, 0, 4, 3, 5, 3, 3, 7, 0, 8, 3, 2, 2, 5, 6, 2, 1, 4, 4
        # .word 5, 9, 7, 2, 9, 0, 0, 4, 2, 7, 8, 0, 7, 4, 2, 9, 0, 9, 6, 5, 3, 8, 7, 8, 9, 0, 1, 1, 9, 9, 2, 3, 1, 8, 1, 9, 4, 2, 6, 3, 4, 8, 4, 0, 0, 4
        # .word 1, 5, 3, 4, 4, 3, 4, 3, 1, 1, 6, 3, 7, 9, 9, 2, 4, 4, 5, 7, 9, 8, 8, 8, 5, 9, 5, 9, 7, 3, 0, 0, 7, 8, 0, 6, 2, 0, 6, 3, 5, 2, 8, 1, 2, 7
        # .word 1, 1, 3, 5, 1, 7, 1, 6, 8, 6, 3, 9, 5, 5, 1, 4, 0, 5, 9, 1, 7, 0, 5, 3, 7, 8, 9, 2, 1, 6, 5, 4, 5, 7, 4, 1, 6, 2, 1, 4, 8, 8, 9, 9, 8, 5
        # .word 3, 6, 2, 8, 4, 3, 5, 1, 9, 4, 2, 5, 3, 9, 2, 2, 2, 2, 5, 0, 9, 5, 9, 1, 0, 3, 5, 7, 7, 3, 2, 1, 2, 2, 4, 1, 5, 0, 0, 7, 5, 3, 6, 8, 2, 6
        # .word 0, 8, 3, 7, 5, 8, 4, 4, 0, 0, 4, 5, 1, 1, 7, 4, 6, 6, 1, 2, 8, 9, 8, 3, 4, 1, 1, 5, 2, 5, 9, 3, 9, 2, 1, 2, 6, 7, 6, 3, 8, 0, 9, 2, 4, 7
        # .word 4, 2, 5, 6, 5, 1, 5, 3, 4, 0, 2, 3, 9, 1, 7, 1, 5, 4, 2, 0, 1, 7, 8, 7, 1, 6, 6, 9, 7, 4, 0, 0, 8, 9, 1, 2, 1, 3, 4, 7, 4, 1, 5, 9, 9, 7
        # .word 9, 7, 0, 0, 7, 1, 8, 5, 5, 1, 7, 3, 8, 9, 2, 5, 0, 4, 9, 6, 5, 7, 8, 2, 9, 4, 1, 7, 6, 1, 8, 6, 1, 9, 8, 4, 5, 6, 6, 8, 1, 1, 7, 8, 6, 2
        # .word 4, 3, 0, 1, 9, 9, 9, 7, 6, 9, 4, 1, 6, 8, 0, 6, 2, 3, 7, 8, 0, 3, 4, 0, 1, 8, 5, 5, 2, 2, 4, 7, 8, 1, 1, 4, 8, 9, 5, 9, 9, 2, 9, 8, 6, 2
        # .word 7, 1, 3, 7, 2, 1, 7, 8, 6, 8, 1, 0, 3, 3, 4, 4, 2, 8, 7, 0, 3, 3, 5, 5, 2, 3, 3, 0, 8, 2, 6, 0, 0, 0, 8, 4, 9, 6, 7, 3, 2, 8, 8, 8, 8, 6
        # .word 2, 9, 5, 6, 0, 3, 6, 9, 6, 9, 0, 0, 2, 4, 3, 3, 4, 1, 7, 7, 3, 1, 1, 6, 8, 5, 1, 6, 6, 2, 0, 7, 9, 5, 8, 4, 8, 8, 4, 4, 2, 3, 8, 4, 1, 2
        # .word 2, 4, 7, 3, 8, 7, 1, 3, 2, 6, 2, 2, 9, 0, 7, 1, 6, 3, 5, 1, 8, 5, 1, 0, 3, 4, 2, 6, 4, 1, 2, 6, 7, 5, 9, 5, 7, 2, 1, 3, 8, 0, 2, 2, 5, 9
        # .word 2, 9, 1, 7, 7, 7, 6, 3, 8, 8, 0, 5, 5, 2, 2, 5, 3, 8, 9, 0, 8, 4, 8, 9, 2, 4, 1, 6, 3, 6, 9, 6, 7, 7, 8, 8, 6, 5, 3, 3, 5, 2, 7, 8, 4, 3
        # .word 6, 1, 2, 0, 3, 1, 0, 9, 8, 6, 8, 5, 5, 0, 5, 8, 6, 4, 4, 4, 3, 8, 2, 5, 5, 9, 3, 5, 2, 7, 1, 2, 7, 7, 7, 8, 5, 5, 5, 8, 1, 7, 9, 8, 0, 0
        # .word 1, 1, 8, 6, 7, 5, 8, 0, 9, 3, 7, 0, 2, 5, 7, 7, 4, 5, 8, 2, 2, 9, 4, 6, 8, 1, 0, 0, 0, 6, 4, 0, 0, 1, 8, 3, 5, 2, 6, 2, 0, 0, 2, 6, 8, 4
        # .word 1, 2, 6, 9, 5, 0, 4, 2, 7, 6, 7, 3, 5, 5, 4, 8, 9, 5, 5, 4, 1, 1, 8, 3, 1, 7, 2, 8, 9, 5, 2, 9, 6, 6, 9, 7, 4, 8, 9, 7, 4, 5, 3, 5, 4, 5
        # .word 9, 7, 6, 4, 0, 2, 3, 2, 7, 2, 3, 4, 5, 7, 2, 5, 7, 8, 9, 4, 6, 4, 5, 9, 8, 0, 5, 0, 4, 8, 3, 9, 7, 0, 4, 9, 0, 2, 5, 2, 2, 9, 6, 5, 8, 2
        # .word 1, 2, 3, 0, 6, 1, 1, 3, 0, 5, 1, 9, 1, 9, 5, 7, 6, 0, 4, 3, 9, 6, 5, 9, 8, 8, 0, 2, 7, 5, 3, 0, 1, 2, 9, 7, 6, 4, 5, 5, 7, 9, 7, 0, 4, 3
        # .word 5, 5, 7, 4, 7, 5, 7, 0, 1, 1, 3, 1, 0, 9, 8, 0, 4, 8, 6, 0, 7, 6, 5, 6, 8, 1, 3, 9, 3, 2, 0, 9, 9, 8, 6, 2, 9, 3, 2, 2, 7, 8, 1, 5, 5, 3
        # .word 3, 8, 8, 5, 2, 0, 2, 0, 1, 4, 0, 5, 3, 2, 1, 0, 3, 2, 9, 0, 1, 5, 7, 9, 9, 6, 1, 0, 6, 4, 5, 9, 5, 6, 5, 9, 4, 9, 0, 5, 6, 4, 1, 2, 6, 5
        # .word 0, 4, 1, 9, 5, 4, 3, 3, 4, 4, 3, 2, 6, 7, 9, 8, 4, 9, 7, 9, 6, 1, 5, 7, 7, 8, 6, 8, 9, 2, 1, 7, 9, 5, 5, 8, 7, 6, 7, 3, 6, 9, 1, 5, 3, 4
        # .word 9, 6, 0, 4, 1, 1, 0, 2, 1, 2, 9, 8, 7, 7, 0, 0, 8, 5, 2, 8, 3, 0, 0, 7, 2, 4, 5, 4, 9, 3, 1, 5, 6, 9, 9, 2, 6, 9, 2, 1, 2, 3, 0, 6, 2, 1
        # .word 1, 6, 1, 7, 1, 3, 4, 5, 8, 3, 5, 6, 2, 0, 8, 3, 3, 0, 2, 0, 4, 8, 0, 4, 6, 8, 5, 6, 5, 5, 4, 8, 4, 2, 8, 5, 6, 4, 2, 0, 1, 9, 3, 1, 4, 6
        # .word 9, 3, 9, 3, 4, 7, 7, 1, 1, 2, 0, 1, 1, 3, 3, 9, 5, 1, 3, 7, 9, 6, 4, 8, 8, 2, 4, 9, 8, 6, 5, 1, 6, 1, 9, 9, 6, 7, 3, 1, 1, 0, 7, 9, 2, 6
        # .word 8, 0, 3, 0, 3, 7, 5, 9, 2, 4, 9, 4, 5, 5, 6, 8, 5, 7, 9, 4, 5, 1, 2, 0, 9, 1, 1, 5, 9, 9, 0, 4, 2, 9, 6, 4, 1, 1, 5, 6, 3, 7, 2, 6, 9, 8
        # .word 9, 2, 9, 3, 9, 2, 9, 0, 9, 1, 6, 6, 8, 7, 0, 9, 6, 1, 4, 4, 7, 1, 8, 6, 0, 9, 9, 5, 0, 1, 3, 6, 5, 5, 1, 1, 5, 9, 1, 4, 4, 5, 6, 2, 6, 6
        # .word 6, 5, 4, 1, 8, 0, 1, 8, 0, 4, 6, 7, 4, 9, 9, 5, 1, 0, 8, 2, 8, 9, 8, 4, 6, 1, 3, 1, 7, 1, 1, 6, 7, 4, 6, 3, 6, 9, 8, 3, 6, 4, 1, 1, 3, 2
        # .word 3, 2, 8, 0, 2, 2, 5, 2, 8, 4, 6, 3, 8, 9, 5, 1, 2, 6, 5, 5, 5, 2, 7, 8, 3, 4, 6, 9, 0, 7, 0, 3, 9, 3, 7, 7, 7, 3, 9, 5, 7, 1, 5, 6, 3, 0
        # .word 8, 2, 6, 5, 3, 9, 7, 2, 6, 8, 3, 8, 5, 6, 2, 1, 8, 5, 0, 0, 2, 5, 4, 9, 7, 6, 2, 2, 1, 6, 6, 9, 2, 2, 1, 4, 1, 7, 6, 2, 9, 5, 7, 9, 6, 6
        # .word 8, 2, 7, 3, 1, 8, 1, 0, 1, 6, 7, 8, 1, 2, 9, 4, 0, 2, 5, 4, 0, 4, 1, 8, 0, 3, 6, 8, 7, 1, 7, 3, 0, 6, 3, 5, 3, 1, 1, 4, 2, 7, 9, 1, 2, 2
        # .word 7, 3, 3, 9, 6, 6, 4, 1, 7, 3, 7, 9, 6, 3, 4, 9, 9, 3, 2, 4, 3, 6, 9, 6, 7, 5, 2, 3, 1, 5, 1, 1, 1, 5, 7, 1, 4, 7, 3, 3, 8, 1, 8, 3, 0, 8
        # .word 5, 6, 5, 4, 5, 0, 5, 3, 6, 8, 2, 4, 9, 4, 4, 5, 4, 0, 5, 2, 1, 8, 5, 4, 9, 8, 1, 0, 4, 9, 6, 5, 9, 4, 8, 8, 8, 5, 7, 8, 8, 5, 1, 8, 0, 1
        # .word 7, 8, 7, 3, 1, 7, 7, 8, 6, 2, 4, 7, 1, 4, 8, 7, 7, 7, 8, 5, 6, 3, 7, 9, 6, 5, 9, 9, 9, 7, 1, 7, 3, 5, 6, 6, 3, 2, 2, 9, 9, 2, 3, 4, 0, 2
        # .word 3, 1, 6, 8, 8, 5, 0, 7, 7, 9, 1, 3, 6, 9, 4, 0, 6, 3, 8, 4, 2, 3, 5, 3, 5, 1, 2, 0, 3, 0, 4, 8, 7, 8, 1, 0, 9, 7, 6, 2, 4, 3, 9, 7, 7, 9
        # .word 9, 1, 0, 3, 6, 3, 2, 3, 1, 3, 3, 7, 6, 1, 4, 0, 6, 5, 4, 7, 7, 9, 5, 9, 8, 9, 8, 9, 9, 9, 5, 2, 2, 3, 9, 0, 8, 2, 6, 7, 1, 7, 0, 4, 0, 1
        # .word 6, 2, 4, 2, 9, 2, 0, 5, 0, 4, 1, 7, 7, 5, 5, 1, 8, 2, 8, 7, 2, 5, 7, 4, 8, 8, 3, 4, 9, 3, 2, 1, 9, 7, 6, 6, 7, 1, 2, 7, 5, 9, 7, 5, 5, 9
        # .word 3, 2, 2, 0, 8, 3, 1, 8, 0, 2, 5, 1, 4, 2, 3, 0, 2, 6, 9, 0, 9, 0, 3, 9, 9, 8, 9, 1, 8, 9, 0, 3, 2, 2, 1, 0, 0, 4, 4, 6, 5, 3, 1, 7, 5, 6
        # .word 2, 9, 0, 8, 4, 6, 7, 4, 1, 2, 9, 1, 2, 4, 7, 1, 8, 5, 9, 3, 8, 0, 3, 7, 8, 4, 7, 0, 6, 0, 8, 9, 7, 9, 4, 3, 8, 9, 0, 4, 0, 1, 1, 6, 8, 9
        # .word 4, 1, 9, 1, 6, 1, 4, 4, 7, 4, 6, 0, 0, 9, 3, 0, 5, 9, 6, 2, 3, 2, 5, 3, 1, 6, 0, 9, 5, 5, 0, 9, 7, 4, 7, 5, 3, 3, 7, 8, 0, 1, 1, 9, 5, 5
        # .word 3, 0, 5, 1, 3, 1, 5, 1, 2, 5, 5, 4, 1, 2, 4, 1, 7, 8, 1, 2, 7, 8, 6, 8, 2, 9, 3, 1, 3, 6, 3, 7, 2, 5, 0, 0, 8, 8, 4, 6, 3, 1, 0, 7, 6, 2
        # .word 3, 0, 9, 4, 4, 3, 3, 1, 1, 5, 8, 6, 4, 1, 8, 8, 8, 7, 8, 5, 9, 7, 7, 2, 5, 7, 4, 4, 5, 3, 5, 0, 2, 9, 9, 4, 5, 4, 8, 9, 4, 7, 6, 2, 1, 2
        # .word 9, 4, 5, 0, 2, 1, 2, 0, 7, 1, 4, 1, 3, 8, 5, 4, 5, 0, 5, 7, 1, 4, 8, 4, 2, 0, 2, 0, 7, 0, 6, 6, 0, 8, 7, 7, 9, 3, 7, 5, 0, 4, 8, 9, 4, 6
        # .word 1, 8, 4, 7, 4, 0, 1, 2, 1, 6, 1, 2, 8, 3, 1, 9, 5, 8, 2, 2, 7, 6, 5, 9, 8, 5, 3, 4, 9, 5, 8, 1, 0, 2, 8, 1, 7, 9, 1, 2, 0, 2, 1, 5, 8, 3
        # .word 4, 9, 9, 9, 8, 9, 0, 1, 1, 0, 0, 7, 3, 2, 1, 0, 6, 5, 3, 1, 7, 3, 0, 1, 6, 9, 8, 8, 8, 5, 5, 2, 5, 5, 8, 8, 8, 5, 3, 1, 1, 6, 0, 0, 0, 7
        # .word 6, 6, 6, 0, 1, 9, 1, 4, 9, 7, 7, 2, 7, 9, 8, 8, 6, 7, 3, 2, 9, 2, 2, 0, 8, 2, 3, 3, 7, 5, 2, 7, 6, 5, 4, 2, 9, 1, 2, 8, 6, 8, 8, 4, 6, 4
        # .word 6, 6, 4, 2, 0, 1, 8, 2, 4, 2, 7, 9, 4, 0, 0, 9, 7, 7, 3, 9, 9, 0, 4, 2, 2, 5, 5, 2, 2, 0, 8, 8, 5, 2, 3, 7, 5, 5, 9, 6, 8, 8, 8, 4, 8, 1
        # .word 2, 5, 9, 3, 6, 9, 0, 2, 0, 4, 6, 3, 6, 6, 7, 5, 0, 6, 0, 9, 0, 7, 9, 2, 0, 1, 3, 2, 1, 7, 2, 3, 1, 7, 8, 9, 0, 9, 1, 1, 0, 9, 2, 2, 0, 0
        # .word 2, 5, 9, 3, 6, 9, 0, 2, 0, 4, 6, 3, 6, 6, 7, 5, 0, 6, 0, 9, 0, 7, 9, 2, 0, 1, 3, 2, 1, 7, 2, 3, 1, 7, 8, 9, 0, 9, 1, 1, 0, 9, 2, 2, 0, 0

        # 测试小矩阵
        # .word 1, 2
        # .word 5, 6
        # .word 9, 10
        .word 1, 5, 9, 3
        .word 2, 6, 10, 1
        .word 3, 7, 11, 2

result:
        .space 4000
temp:
        .space 4000
vector_temp:
        .space 500
